<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TokoKu - Toko Online</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            box-sizing: border-box;
        }
        .fade-in {
            animation: fadeIn 0.3s ease-in;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .slide-in {
            animation: slideIn 0.3s ease-out;
        }
        @keyframes slideIn {
            from { transform: translateX(100%); }
            to { transform: translateX(0); }
        }
    </style>
</head>
<body class="bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen">
    <!-- Navigation -->
    <nav class="bg-white shadow-lg sticky top-0 z-50">
        <div class="max-w-7xl mx-auto px-4">
            <div class="flex justify-between items-center py-4">
                <div class="flex items-center space-x-4">
                    <h1 class="text-2xl font-bold text-indigo-600 cursor-pointer" onclick="showPage('home')">üõçÔ∏è TokoKu</h1>
                </div>
                <div class="flex items-center space-x-4">
                    <div id="userNav" class="hidden">
                        <button onclick="showPage('cart')" class="relative bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 transition-colors">
                            üõí Keranjang
                            <span id="cartCount" class="absolute -top-2 -right-2 bg-red-500 text-white rounded-full w-6 h-6 text-xs flex items-center justify-center">0</span>
                        </button>
                        <button onclick="showPage('orders')" class="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors">üìã Pesanan</button>
                        <button onclick="logout()" class="bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition-colors">Keluar</button>
                    </div>
                    <div id="adminNav" class="hidden">
                        <button onclick="showPage('admin')" class="bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-700 transition-colors">‚öôÔ∏è Admin</button>
                        <button onclick="logout()" class="bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition-colors">Keluar</button>
                    </div>
                    <div id="guestNav">
                        <button onclick="showPage('login')" class="bg-indigo-600 text-white px-4 py-2 rounded-lg hover:bg-indigo-700 transition-colors">Masuk</button>
                        <button onclick="showPage('register')" class="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition-colors">Daftar</button>
                    </div>
                </div>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="max-w-7xl mx-auto px-4 py-8">
        <!-- Login Page -->
        <div id="loginPage" class="hidden fade-in">
            <div class="max-w-md mx-auto bg-white rounded-xl shadow-lg p-8">
                <h2 class="text-3xl font-bold text-center text-gray-800 mb-8">Masuk</h2>
                <form onsubmit="handleLogin(event)">
                    <div class="mb-6">
                        <label class="block text-gray-700 text-sm font-bold mb-2">Email</label>
                        <input type="email" id="loginEmail" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-indigo-500">
                    </div>
                    <div class="mb-6">
                        <label class="block text-gray-700 text-sm font-bold mb-2">Password</label>
                        <input type="password" id="loginPassword" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-indigo-500">
                    </div>
                    <button type="submit" class="w-full bg-indigo-600 text-white py-3 rounded-lg hover:bg-indigo-700 transition-colors font-semibold">Masuk</button>
                </form>
                <p class="text-center mt-4 text-gray-600">Belum punya akun? <button onclick="showPage('register')" class="text-indigo-600 hover:underline">Daftar di sini</button></p>
            </div>
        </div>

        <!-- Register Page -->
        <div id="registerPage" class="hidden fade-in">
            <div class="max-w-md mx-auto bg-white rounded-xl shadow-lg p-8">
                <h2 class="text-3xl font-bold text-center text-gray-800 mb-8">Daftar</h2>
                <form onsubmit="handleRegister(event)">
                    <div class="mb-4">
                        <label class="block text-gray-700 text-sm font-bold mb-2">Nama Lengkap</label>
                        <input type="text" id="registerName" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-indigo-500">
                    </div>
                    <div class="mb-4">
                        <label class="block text-gray-700 text-sm font-bold mb-2">Email</label>
                        <input type="email" id="registerEmail" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-indigo-500">
                    </div>
                    <div class="mb-4">
                        <label class="block text-gray-700 text-sm font-bold mb-2">Password</label>
                        <input type="password" id="registerPassword" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-indigo-500">
                    </div>
                    <div class="mb-6">
                        <label class="block text-gray-700 text-sm font-bold mb-2">Alamat</label>
                        <textarea id="registerAddress" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-indigo-500" rows="3"></textarea>
                    </div>
                    <button type="submit" class="w-full bg-green-600 text-white py-3 rounded-lg hover:bg-green-700 transition-colors font-semibold">Daftar</button>
                </form>
                <p class="text-center mt-4 text-gray-600">Sudah punya akun? <button onclick="showPage('login')" class="text-indigo-600 hover:underline">Masuk di sini</button></p>
            </div>
        </div>

        <!-- Home Page -->
        <div id="homePage" class="fade-in">
            <div class="text-center mb-12">
                <h1 class="text-4xl font-bold text-gray-800 mb-4">Selamat Datang di TokoKu</h1>
                <p class="text-xl text-gray-600">Temukan produk terbaik dengan harga terjangkau</p>
            </div>

            <!-- Product Grid -->
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6" id="productGrid">
                <!-- Products will be loaded here -->
            </div>
        </div>

        <!-- Cart Page -->
        <div id="cartPage" class="hidden fade-in">
            <h2 class="text-3xl font-bold text-gray-800 mb-8">Keranjang Belanja</h2>
            <div id="cartItems" class="space-y-4 mb-8">
                <!-- Cart items will be loaded here -->
            </div>
            <div class="bg-white rounded-xl shadow-lg p-6">
                <div class="flex justify-between items-center text-xl font-bold mb-4">
                    <span>Total:</span>
                    <span id="cartTotal">Rp 0</span>
                </div>
                <button onclick="showPage('checkout')" id="checkoutBtn" class="w-full bg-indigo-600 text-white py-3 rounded-lg hover:bg-indigo-700 transition-colors font-semibold disabled:bg-gray-400" disabled>Lanjut ke Checkout</button>
            </div>
        </div>

        <!-- Checkout Page -->
        <div id="checkoutPage" class="hidden fade-in">
            <h2 class="text-3xl font-bold text-gray-800 mb-8">Checkout</h2>
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                <div class="bg-white rounded-xl shadow-lg p-6">
                    <h3 class="text-xl font-bold mb-4">Informasi Pengiriman</h3>
                    <form id="checkoutForm">
                        <div class="mb-4">
                            <label class="block text-gray-700 text-sm font-bold mb-2">Nama Penerima</label>
                            <input type="text" id="receiverName" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-indigo-500">
                        </div>
                        <div class="mb-4">
                            <label class="block text-gray-700 text-sm font-bold mb-2">Alamat Lengkap</label>
                            <textarea id="shippingAddress" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-indigo-500" rows="3"></textarea>
                        </div>
                        <div class="mb-4">
                            <label class="block text-gray-700 text-sm font-bold mb-2">Pilih Ekspedisi</label>
                            <select id="shippingMethod" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-indigo-500" onchange="updateShippingCost()">
                                <option value="">Pilih Ekspedisi</option>
                                <option value="jne-reg" data-cost="15000">JNE Regular - Rp 15.000</option>
                                <option value="jne-yes" data-cost="25000">JNE YES - Rp 25.000</option>
                                <option value="tiki-reg" data-cost="12000">TIKI Regular - Rp 12.000</option>
                                <option value="pos-reg" data-cost="10000">POS Indonesia - Rp 10.000</option>
                            </select>
                        </div>
                        <div class="mb-4">
                            <label class="block text-gray-700 text-sm font-bold mb-2">Metode Pembayaran</label>
                            <select id="paymentMethod" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-indigo-500">
                                <option value="">Pilih Metode Pembayaran</option>
                                <option value="bank-transfer">Transfer Bank</option>
                                <option value="e-wallet">E-Wallet (GoPay/OVO/DANA)</option>
                                <option value="cod">Bayar di Tempat (COD)</option>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="bg-white rounded-xl shadow-lg p-6">
                    <h3 class="text-xl font-bold mb-4">Ringkasan Pesanan</h3>
                    <div id="checkoutSummary" class="space-y-2 mb-4">
                        <!-- Order summary will be loaded here -->
                    </div>
                    <hr class="my-4">
                    <div class="space-y-2">
                        <div class="flex justify-between">
                            <span>Subtotal:</span>
                            <span id="subtotalAmount">Rp 0</span>
                        </div>
                        <div class="flex justify-between">
                            <span>Ongkos Kirim:</span>
                            <span id="shippingCost">Rp 0</span>
                        </div>
                        <div class="flex justify-between text-xl font-bold">
                            <span>Total:</span>
                            <span id="finalTotal">Rp 0</span>
                        </div>
                    </div>
                    <button onclick="processOrder()" class="w-full bg-green-600 text-white py-3 rounded-lg hover:bg-green-700 transition-colors font-semibold mt-6">Buat Pesanan</button>
                </div>
            </div>
        </div>

        <!-- Orders Page -->
        <div id="ordersPage" class="hidden fade-in">
            <h2 class="text-3xl font-bold text-gray-800 mb-8">Riwayat Pesanan</h2>
            <div id="ordersList" class="space-y-6">
                <!-- Orders will be loaded here -->
            </div>
        </div>

        <!-- Admin Page -->
        <div id="adminPage" class="hidden fade-in">
            <h2 class="text-3xl font-bold text-gray-800 mb-8">Panel Admin</h2>
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
                <div class="bg-white rounded-xl shadow-lg p-6">
                    <h3 class="text-xl font-bold mb-4">Tambah/Edit Produk</h3>
                    <form id="productForm" onsubmit="saveProduct(event)">
                        <input type="hidden" id="editProductId">
                        <div class="mb-4">
                            <label class="block text-gray-700 text-sm font-bold mb-2">Nama Produk</label>
                            <input type="text" id="productName" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-indigo-500">
                        </div>
                        <div class="mb-4">
                            <label class="block text-gray-700 text-sm font-bold mb-2">Harga</label>
                            <input type="number" id="productPrice" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-indigo-500">
                        </div>
                        <div class="mb-4">
                            <label class="block text-gray-700 text-sm font-bold mb-2">Deskripsi</label>
                            <textarea id="productDescription" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-indigo-500" rows="3"></textarea>
                        </div>
                        <div class="mb-4">
                            <label class="block text-gray-700 text-sm font-bold mb-2">Stok</label>
                            <input type="number" id="productStock" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-indigo-500">
                        </div>
                        <div class="mb-4">
                            <label class="block text-gray-700 text-sm font-bold mb-2">Kategori</label>
                            <select id="productCategory" required class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-indigo-500">
                                <option value="elektronik">Elektronik</option>
                                <option value="fashion">Fashion</option>
                                <option value="rumah-tangga">Rumah Tangga</option>
                                <option value="olahraga">Olahraga</option>
                            </select>
                        </div>
                        <button type="submit" class="w-full bg-purple-600 text-white py-3 rounded-lg hover:bg-purple-700 transition-colors font-semibold">Simpan Produk</button>
                        <button type="button" onclick="resetProductForm()" class="w-full bg-gray-600 text-white py-3 rounded-lg hover:bg-gray-700 transition-colors font-semibold mt-2">Reset Form</button>
                    </form>
                </div>
                <div class="bg-white rounded-xl shadow-lg p-6">
                    <h3 class="text-xl font-bold mb-4">Daftar Produk</h3>
                    <div id="adminProductList" class="space-y-4 max-h-96 overflow-y-auto">
                        <!-- Admin product list will be loaded here -->
                    </div>
                </div>
            </div>
        </div>

        <!-- Order Receipt Modal -->
        <div id="receiptModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50 flex items-center justify-center">
            <div class="bg-white rounded-xl shadow-2xl p-8 max-w-md w-full mx-4 slide-in">
                <div class="text-center mb-6">
                    <div class="text-6xl mb-4">‚úÖ</div>
                    <h3 class="text-2xl font-bold text-green-600">Pesanan Berhasil!</h3>
                </div>
                <div id="receiptContent" class="space-y-2 mb-6">
                    <!-- Receipt content will be loaded here -->
                </div>
                <div class="flex space-x-4">
                    <button onclick="downloadReceipt()" class="flex-1 bg-blue-600 text-white py-3 rounded-lg hover:bg-blue-700 transition-colors font-semibold">üìÑ Download Nota</button>
                    <button onclick="closeReceipt()" class="flex-1 bg-gray-600 text-white py-3 rounded-lg hover:bg-gray-700 transition-colors font-semibold">Tutup</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Global state
        let currentUser = null;
        let currentPage = 'home';
        let cart = [];
        let products = [
            {id: 1, name: 'Smartphone Android', price: 2500000, description: 'Smartphone terbaru dengan kamera 48MP', stock: 10, category: 'elektronik'},
            {id: 2, name: 'Laptop Gaming', price: 8500000, description: 'Laptop gaming dengan spesifikasi tinggi', stock: 5, category: 'elektronik'},
            {id: 3, name: 'Kaos Polos', price: 75000, description: 'Kaos polos berkualitas premium', stock: 50, category: 'fashion'},
            {id: 4, name: 'Sepatu Sneakers', price: 450000, description: 'Sepatu sneakers trendy dan nyaman', stock: 20, category: 'fashion'},
            {id: 5, name: 'Rice Cooker', price: 350000, description: 'Rice cooker dengan teknologi fuzzy logic', stock: 15, category: 'rumah-tangga'},
            {id: 6, name: 'Matras Yoga', price: 125000, description: 'Matras yoga anti slip berkualitas tinggi', stock: 30, category: 'olahraga'}
        ];
        let users = [
            {id: 1, name: 'Admin', email: 'admin@tokoku.com', password: 'admin123', role: 'admin', address: 'Jakarta'}
        ];
        let orders = [];
        let currentReceipt = null;

        // Initialize app
        function init() {
            loadFromStorage();
            updateNavigation();
            loadProducts();
            updateCartCount();
        }

        // Storage functions
        function saveToStorage() {
            localStorage.setItem('tokoku_users', JSON.stringify(users));
            localStorage.setItem('tokoku_products', JSON.stringify(products));
            localStorage.setItem('tokoku_orders', JSON.stringify(orders));
            localStorage.setItem('tokoku_cart', JSON.stringify(cart));
            localStorage.setItem('tokoku_currentUser', JSON.stringify(currentUser));
        }

        function loadFromStorage() {
            const savedUsers = localStorage.getItem('tokoku_users');
            const savedProducts = localStorage.getItem('tokoku_products');
            const savedOrders = localStorage.getItem('tokoku_orders');
            const savedCart = localStorage.getItem('tokoku_cart');
            const savedCurrentUser = localStorage.getItem('tokoku_currentUser');

            if (savedUsers) users = JSON.parse(savedUsers);
            if (savedProducts) products = JSON.parse(savedProducts);
            if (savedOrders) orders = JSON.parse(savedOrders);
            if (savedCart) cart = JSON.parse(savedCart);
            if (savedCurrentUser) currentUser = JSON.parse(savedCurrentUser);
        }

        // Navigation functions
        function showPage(page) {
            // Hide all pages
            const pages = ['loginPage', 'registerPage', 'homePage', 'cartPage', 'checkoutPage', 'ordersPage', 'adminPage'];
            pages.forEach(p => document.getElementById(p).classList.add('hidden'));

            // Show requested page
            document.getElementById(page + 'Page').classList.remove('hidden');
            currentPage = page;

            // Load page-specific content
            if (page === 'home') loadProducts();
            if (page === 'cart') loadCart();
            if (page === 'checkout') loadCheckout();
            if (page === 'orders') loadOrders();
            if (page === 'admin') loadAdminProducts();
        }

        function updateNavigation() {
            const userNav = document.getElementById('userNav');
            const adminNav = document.getElementById('adminNav');
            const guestNav = document.getElementById('guestNav');

            if (currentUser) {
                guestNav.classList.add('hidden');
                if (currentUser.role === 'admin') {
                    adminNav.classList.remove('hidden');
                    userNav.classList.add('hidden');
                } else {
                    userNav.classList.remove('hidden');
                    adminNav.classList.add('hidden');
                }
            } else {
                guestNav.classList.remove('hidden');
                userNav.classList.add('hidden');
                adminNav.classList.add('hidden');
            }
        }

        // Authentication functions
        function handleLogin(event) {
            event.preventDefault();
            const email = document.getElementById('loginEmail').value;
            const password = document.getElementById('loginPassword').value;

            const user = users.find(u => u.email === email && u.password === password);
            if (user) {
                currentUser = user;
                saveToStorage();
                updateNavigation();
                showPage('home');
                alert('Login berhasil!');
            } else {
                alert('Email atau password salah!');
            }
        }

        function handleRegister(event) {
            event.preventDefault();
            const name = document.getElementById('registerName').value;
            const email = document.getElementById('registerEmail').value;
            const password = document.getElementById('registerPassword').value;
            const address = document.getElementById('registerAddress').value;

            if (users.find(u => u.email === email)) {
                alert('Email sudah terdaftar!');
                return;
            }

            const newUser = {
                id: users.length + 1,
                name,
                email,
                password,
                address,
                role: 'user'
            };

            users.push(newUser);
            saveToStorage();
            alert('Registrasi berhasil! Silakan login.');
            showPage('login');
        }

        function logout() {
            currentUser = null;
            cart = [];
            saveToStorage();
            updateNavigation();
            updateCartCount();
            showPage('home');
        }

        // Product functions
        function loadProducts() {
            const grid = document.getElementById('productGrid');
            grid.innerHTML = products.map(product => `
                <div class="bg-white rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-shadow">
                    <div class="h-48 bg-gradient-to-br from-indigo-400 to-purple-500 flex items-center justify-center">
                        <span class="text-6xl">${getCategoryIcon(product.category)}</span>
                    </div>
                    <div class="p-6">
                        <h3 class="text-xl font-bold text-gray-800 mb-2">${product.name}</h3>
                        <p class="text-gray-600 mb-4">${product.description}</p>
                        <div class="flex justify-between items-center mb-4">
                            <span class="text-2xl font-bold text-indigo-600">Rp ${product.price.toLocaleString()}</span>
                            <span class="text-sm text-gray-500">Stok: ${product.stock}</span>
                        </div>
                        ${currentUser && currentUser.role === 'user' ? `
                            <button onclick="addToCart(${product.id})" class="w-full bg-indigo-600 text-white py-3 rounded-lg hover:bg-indigo-700 transition-colors font-semibold ${product.stock === 0 ? 'opacity-50 cursor-not-allowed' : ''}" ${product.stock === 0 ? 'disabled' : ''}>
                                ${product.stock === 0 ? 'Stok Habis' : 'Tambah ke Keranjang'}
                            </button>
                        ` : ''}
                    </div>
                </div>
            `).join('');
        }

        function getCategoryIcon(category) {
            const icons = {
                'elektronik': 'üì±',
                'fashion': 'üëï',
                'rumah-tangga': 'üè†',
                'olahraga': '‚öΩ'
            };
            return icons[category] || 'üì¶';
        }

        // Cart functions
        function addToCart(productId) {
            if (!currentUser || currentUser.role !== 'user') {
                alert('Silakan login sebagai user untuk berbelanja!');
                return;
            }

            const product = products.find(p => p.id === productId);
            if (!product || product.stock === 0) {
                alert('Produk tidak tersedia!');
                return;
            }

            const existingItem = cart.find(item => item.productId === productId);
            if (existingItem) {
                if (existingItem.quantity < product.stock) {
                    existingItem.quantity++;
                } else {
                    alert('Stok tidak mencukupi!');
                    return;
                }
            } else {
                cart.push({
                    productId,
                    quantity: 1,
                    price: product.price
                });
            }

            saveToStorage();
            updateCartCount();
            alert('Produk ditambahkan ke keranjang!');
        }

        function updateCartCount() {
            const count = cart.reduce((total, item) => total + item.quantity, 0);
            document.getElementById('cartCount').textContent = count;
        }

        function loadCart() {
            const cartItems = document.getElementById('cartItems');
            const cartTotal = document.getElementById('cartTotal');
            const checkoutBtn = document.getElementById('checkoutBtn');

            if (cart.length === 0) {
                cartItems.innerHTML = '<div class="text-center py-8 text-gray-500">Keranjang kosong</div>';
                cartTotal.textContent = 'Rp 0';
                checkoutBtn.disabled = true;
                return;
            }

            let total = 0;
            cartItems.innerHTML = cart.map(item => {
                const product = products.find(p => p.id === item.productId);
                const itemTotal = item.price * item.quantity;
                total += itemTotal;

                return `
                    <div class="bg-white rounded-xl shadow-lg p-6 flex items-center space-x-4">
                        <div class="w-16 h-16 bg-gradient-to-br from-indigo-400 to-purple-500 rounded-lg flex items-center justify-center">
                            <span class="text-2xl">${getCategoryIcon(product.category)}</span>
                        </div>
                        <div class="flex-1">
                            <h3 class="text-lg font-bold text-gray-800">${product.name}</h3>
                            <p class="text-gray-600">Rp ${item.price.toLocaleString()} x ${item.quantity}</p>
                        </div>
                        <div class="flex items-center space-x-2">
                            <button onclick="updateCartQuantity(${item.productId}, -1)" class="bg-red-500 text-white w-8 h-8 rounded-full hover:bg-red-600 transition-colors">-</button>
                            <span class="w-8 text-center">${item.quantity}</span>
                            <button onclick="updateCartQuantity(${item.productId}, 1)" class="bg-green-500 text-white w-8 h-8 rounded-full hover:bg-green-600 transition-colors">+</button>
                        </div>
                        <div class="text-right">
                            <div class="text-lg font-bold text-indigo-600">Rp ${itemTotal.toLocaleString()}</div>
                            <button onclick="removeFromCart(${item.productId})" class="text-red-500 hover:text-red-700 text-sm">Hapus</button>
                        </div>
                    </div>
                `;
            }).join('');

            cartTotal.textContent = `Rp ${total.toLocaleString()}`;
            checkoutBtn.disabled = false;
        }

        function updateCartQuantity(productId, change) {
            const item = cart.find(item => item.productId === productId);
            const product = products.find(p => p.id === productId);

            if (item) {
                const newQuantity = item.quantity + change;
                if (newQuantity <= 0) {
                    removeFromCart(productId);
                } else if (newQuantity <= product.stock) {
                    item.quantity = newQuantity;
                    saveToStorage();
                    loadCart();
                    updateCartCount();
                } else {
                    alert('Stok tidak mencukupi!');
                }
            }
        }

        function removeFromCart(productId) {
            cart = cart.filter(item => item.productId !== productId);
            saveToStorage();
            loadCart();
            updateCartCount();
        }

        // Checkout functions
        function loadCheckout() {
            if (cart.length === 0) {
                showPage('cart');
                return;
            }

            // Pre-fill user data
            if (currentUser) {
                document.getElementById('receiverName').value = currentUser.name;
                document.getElementById('shippingAddress').value = currentUser.address;
            }

            updateCheckoutSummary();
        }

        function updateCheckoutSummary() {
            const summary = document.getElementById('checkoutSummary');
            const subtotal = document.getElementById('subtotalAmount');
            
            let total = 0;
            summary.innerHTML = cart.map(item => {
                const product = products.find(p => p.id === item.productId);
                const itemTotal = item.price * item.quantity;
                total += itemTotal;

                return `
                    <div class="flex justify-between">
                        <span>${product.name} x${item.quantity}</span>
                        <span>Rp ${itemTotal.toLocaleString()}</span>
                    </div>
                `;
            }).join('');

            subtotal.textContent = `Rp ${total.toLocaleString()}`;
            updateShippingCost();
        }

        function updateShippingCost() {
            const shippingMethod = document.getElementById('shippingMethod');
            const shippingCost = document.getElementById('shippingCost');
            const subtotal = document.getElementById('subtotalAmount');
            const finalTotal = document.getElementById('finalTotal');

            const subtotalValue = cart.reduce((total, item) => total + (item.price * item.quantity), 0);
            const shippingValue = shippingMethod.selectedOptions[0]?.dataset.cost || 0;

            shippingCost.textContent = `Rp ${parseInt(shippingValue).toLocaleString()}`;
            finalTotal.textContent = `Rp ${(subtotalValue + parseInt(shippingValue)).toLocaleString()}`;
        }

        function processOrder() {
            const form = document.getElementById('checkoutForm');
            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }

            const receiverName = document.getElementById('receiverName').value;
            const shippingAddress = document.getElementById('shippingAddress').value;
            const shippingMethod = document.getElementById('shippingMethod');
            const paymentMethod = document.getElementById('paymentMethod').value;

            const subtotal = cart.reduce((total, item) => total + (item.price * item.quantity), 0);
            const shippingCost = parseInt(shippingMethod.selectedOptions[0].dataset.cost);
            const total = subtotal + shippingCost;

            const order = {
                id: orders.length + 1,
                userId: currentUser.id,
                items: [...cart],
                receiverName,
                shippingAddress,
                shippingMethod: shippingMethod.selectedOptions[0].text,
                paymentMethod,
                subtotal,
                shippingCost,
                total,
                status: 'pending',
                date: new Date().toISOString()
            };

            // Update product stock
            cart.forEach(item => {
                const product = products.find(p => p.id === item.productId);
                if (product) {
                    product.stock -= item.quantity;
                }
            });

            orders.push(order);
            currentReceipt = order;
            cart = [];
            saveToStorage();
            updateCartCount();
            showReceipt();
        }

        function showReceipt() {
            const modal = document.getElementById('receiptModal');
            const content = document.getElementById('receiptContent');

            content.innerHTML = `
                <div class="border-b pb-4 mb-4">
                    <h4 class="font-bold">Nota Pembelian #${currentReceipt.id}</h4>
                    <p class="text-sm text-gray-600">${new Date(currentReceipt.date).toLocaleString('id-ID')}</p>
                </div>
                <div class="space-y-2 mb-4">
                    <div><strong>Penerima:</strong> ${currentReceipt.receiverName}</div>
                    <div><strong>Alamat:</strong> ${currentReceipt.shippingAddress}</div>
                    <div><strong>Ekspedisi:</strong> ${currentReceipt.shippingMethod}</div>
                    <div><strong>Pembayaran:</strong> ${currentReceipt.paymentMethod}</div>
                </div>
                <div class="border-t pt-4">
                    ${currentReceipt.items.map(item => {
                        const product = products.find(p => p.id === item.productId);
                        return `<div class="flex justify-between text-sm">
                            <span>${product.name} x${item.quantity}</span>
                            <span>Rp ${(item.price * item.quantity).toLocaleString()}</span>
                        </div>`;
                    }).join('')}
                    <div class="flex justify-between text-sm mt-2">
                        <span>Ongkos Kirim</span>
                        <span>Rp ${currentReceipt.shippingCost.toLocaleString()}</span>
                    </div>
                    <div class="flex justify-between font-bold text-lg mt-2 pt-2 border-t">
                        <span>Total</span>
                        <span>Rp ${currentReceipt.total.toLocaleString()}</span>
                    </div>
                </div>
            `;

            modal.classList.remove('hidden');
        }

        function closeReceipt() {
            document.getElementById('receiptModal').classList.add('hidden');
            showPage('orders');
        }

        function downloadReceipt() {
            const receiptText = `
NOTA PEMBELIAN #${currentReceipt.id}
${new Date(currentReceipt.date).toLocaleString('id-ID')}

Penerima: ${currentReceipt.receiverName}
Alamat: ${currentReceipt.shippingAddress}
Ekspedisi: ${currentReceipt.shippingMethod}
Pembayaran: ${currentReceipt.paymentMethod}

DETAIL PEMBELIAN:
${currentReceipt.items.map(item => {
    const product = products.find(p => p.id === item.productId);
    return `${product.name} x${item.quantity} - Rp ${(item.price * item.quantity).toLocaleString()}`;
}).join('\n')}

Subtotal: Rp ${currentReceipt.subtotal.toLocaleString()}
Ongkos Kirim: Rp ${currentReceipt.shippingCost.toLocaleString()}
TOTAL: Rp ${currentReceipt.total.toLocaleString()}

Terima kasih telah berbelanja di TokoKu!
            `;

            const blob = new Blob([receiptText], { type: 'text/plain' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `nota-${currentReceipt.id}.txt`;
            a.click();
            URL.revokeObjectURL(url);
        }

        // Orders functions
        function loadOrders() {
            const ordersList = document.getElementById('ordersList');
            const userOrders = orders.filter(order => order.userId === currentUser.id);

            if (userOrders.length === 0) {
                ordersList.innerHTML = '<div class="text-center py-8 text-gray-500">Belum ada pesanan</div>';
                return;
            }

            ordersList.innerHTML = userOrders.map(order => `
                <div class="bg-white rounded-xl shadow-lg p-6">
                    <div class="flex justify-between items-start mb-4">
                        <div>
                            <h3 class="text-lg font-bold text-gray-800">Pesanan #${order.id}</h3>
                            <p class="text-sm text-gray-600">${new Date(order.date).toLocaleString('id-ID')}</p>
                        </div>
                        <span class="px-3 py-1 rounded-full text-sm font-semibold ${order.status === 'pending' ? 'bg-yellow-100 text-yellow-800' : 'bg-green-100 text-green-800'}">
                            ${order.status === 'pending' ? 'Menunggu' : 'Selesai'}
                        </span>
                    </div>
                    <div class="space-y-2 mb-4">
                        ${order.items.map(item => {
                            const product = products.find(p => p.id === item.productId);
                            return `<div class="flex justify-between text-sm">
                                <span>${product.name} x${item.quantity}</span>
                                <span>Rp ${(item.price * item.quantity).toLocaleString()}</span>
                            </div>`;
                        }).join('')}
                    </div>
                    <div class="border-t pt-4 flex justify-between items-center">
                        <div>
                            <div class="text-lg font-bold text-indigo-600">Total: Rp ${order.total.toLocaleString()}</div>
                            <div class="text-sm text-gray-600">${order.shippingMethod} ‚Ä¢ ${order.paymentMethod}</div>
                        </div>
                        <button onclick="viewOrderReceipt(${order.id})" class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors">Lihat Nota</button>
                    </div>
                </div>
            `).join('');
        }

        function viewOrderReceipt(orderId) {
            currentReceipt = orders.find(order => order.id === orderId);
            showReceipt();
        }

        // Admin functions
        function saveProduct(event) {
            event.preventDefault();
            
            const id = document.getElementById('editProductId').value;
            const name = document.getElementById('productName').value;
            const price = parseInt(document.getElementById('productPrice').value);
            const description = document.getElementById('productDescription').value;
            const stock = parseInt(document.getElementById('productStock').value);
            const category = document.getElementById('productCategory').value;

            if (id) {
                // Edit existing product
                const product = products.find(p => p.id === parseInt(id));
                if (product) {
                    product.name = name;
                    product.price = price;
                    product.description = description;
                    product.stock = stock;
                    product.category = category;
                }
            } else {
                // Add new product
                const newProduct = {
                    id: Math.max(...products.map(p => p.id)) + 1,
                    name,
                    price,
                    description,
                    stock,
                    category
                };
                products.push(newProduct);
            }

            saveToStorage();
            resetProductForm();
            loadAdminProducts();
            loadProducts();
            alert('Produk berhasil disimpan!');
        }

        function resetProductForm() {
            document.getElementById('productForm').reset();
            document.getElementById('editProductId').value = '';
        }

        function loadAdminProducts() {
            const list = document.getElementById('adminProductList');
            list.innerHTML = products.map(product => `
                <div class="border border-gray-200 rounded-lg p-4">
                    <div class="flex justify-between items-start">
                        <div class="flex-1">
                            <h4 class="font-bold text-gray-800">${product.name}</h4>
                            <p class="text-sm text-gray-600">${product.description}</p>
                            <div class="flex space-x-4 mt-2 text-sm">
                                <span class="text-indigo-600 font-semibold">Rp ${product.price.toLocaleString()}</span>
                                <span class="text-gray-500">Stok: ${product.stock}</span>
                                <span class="text-gray-500">${product.category}</span>
                            </div>
                        </div>
                        <div class="flex space-x-2">
                            <button onclick="editProduct(${product.id})" class="bg-blue-500 text-white px-3 py-1 rounded text-sm hover:bg-blue-600 transition-colors">Edit</button>
                            <button onclick="deleteProduct(${product.id})" class="bg-red-500 text-white px-3 py-1 rounded text-sm hover:bg-red-600 transition-colors">Hapus</button>
                        </div>
                    </div>
                </div>
            `).join('');
        }

        function editProduct(id) {
            const product = products.find(p => p.id === id);
            if (product) {
                document.getElementById('editProductId').value = product.id;
                document.getElementById('productName').value = product.name;
                document.getElementById('productPrice').value = product.price;
                document.getElementById('productDescription').value = product.description;
                document.getElementById('productStock').value = product.stock;
                document.getElementById('productCategory').value = product.category;
            }
        }

        function deleteProduct(id) {
            if (confirm('Yakin ingin menghapus produk ini?')) {
                products = products.filter(p => p.id !== id);
                saveToStorage();
                loadAdminProducts();
                loadProducts();
                alert('Produk berhasil dihapus!');
            }
        }

        // Initialize app when page loads
        init();
    </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'984fa120b4fa8234',t:'MTc1ODg1Njg2OC4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>
